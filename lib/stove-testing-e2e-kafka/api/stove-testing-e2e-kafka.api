public final class com/trendyol/stove/testing/e2e/standalone/kafka/AcknowledgedMessage : com/squareup/wire/Message {
	public static final field ADAPTER Lcom/squareup/wire/ProtoAdapter;
	public static final field Companion Lcom/trendyol/stove/testing/e2e/standalone/kafka/AcknowledgedMessage$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;IJLjava/lang/String;Lokio/ByteString;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;IJLjava/lang/String;Lokio/ByteString;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun copy (Ljava/lang/String;Ljava/lang/String;IJLjava/lang/String;Lokio/ByteString;)Lcom/trendyol/stove/testing/e2e/standalone/kafka/AcknowledgedMessage;
	public static synthetic fun copy$default (Lcom/trendyol/stove/testing/e2e/standalone/kafka/AcknowledgedMessage;Ljava/lang/String;Ljava/lang/String;IJLjava/lang/String;Lokio/ByteString;ILjava/lang/Object;)Lcom/trendyol/stove/testing/e2e/standalone/kafka/AcknowledgedMessage;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getException ()Ljava/lang/String;
	public final fun getId ()Ljava/lang/String;
	public final fun getOffset ()J
	public final fun getPartition ()I
	public final fun getTopic ()Ljava/lang/String;
	public fun hashCode ()I
	public synthetic fun newBuilder ()Lcom/squareup/wire/Message$Builder;
	public synthetic fun newBuilder ()Ljava/lang/Void;
	public fun toString ()Ljava/lang/String;
}

public final class com/trendyol/stove/testing/e2e/standalone/kafka/AcknowledgedMessage$Companion {
}

public final class com/trendyol/stove/testing/e2e/standalone/kafka/Caching {
	public static final field INSTANCE Lcom/trendyol/stove/testing/e2e/standalone/kafka/Caching;
	public final fun of ()Lcom/github/benmanes/caffeine/cache/Cache;
}

public final class com/trendyol/stove/testing/e2e/standalone/kafka/CommittedMessage : com/squareup/wire/Message {
	public static final field ADAPTER Lcom/squareup/wire/ProtoAdapter;
	public static final field Companion Lcom/trendyol/stove/testing/e2e/standalone/kafka/CommittedMessage$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;IJLjava/lang/String;Lokio/ByteString;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;IJLjava/lang/String;Lokio/ByteString;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun copy (Ljava/lang/String;Ljava/lang/String;IJLjava/lang/String;Lokio/ByteString;)Lcom/trendyol/stove/testing/e2e/standalone/kafka/CommittedMessage;
	public static synthetic fun copy$default (Lcom/trendyol/stove/testing/e2e/standalone/kafka/CommittedMessage;Ljava/lang/String;Ljava/lang/String;IJLjava/lang/String;Lokio/ByteString;ILjava/lang/Object;)Lcom/trendyol/stove/testing/e2e/standalone/kafka/CommittedMessage;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getId ()Ljava/lang/String;
	public final fun getMetadata ()Ljava/lang/String;
	public final fun getOffset ()J
	public final fun getPartition ()I
	public final fun getTopic ()Ljava/lang/String;
	public fun hashCode ()I
	public synthetic fun newBuilder ()Lcom/squareup/wire/Message$Builder;
	public synthetic fun newBuilder ()Ljava/lang/Void;
	public fun toString ()Ljava/lang/String;
}

public final class com/trendyol/stove/testing/e2e/standalone/kafka/CommittedMessage$Companion {
}

public final class com/trendyol/stove/testing/e2e/standalone/kafka/CommittedRecord {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;JI)V
	public final fun getMetadata ()Ljava/lang/String;
	public final fun getOffset ()J
	public final fun getPartition ()I
	public final fun getTopic ()Ljava/lang/String;
}

public final class com/trendyol/stove/testing/e2e/standalone/kafka/ConsumedMessage : com/squareup/wire/Message {
	public static final field ADAPTER Lcom/squareup/wire/ProtoAdapter;
	public static final field Companion Lcom/trendyol/stove/testing/e2e/standalone/kafka/ConsumedMessage$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Lokio/ByteString;Ljava/lang/String;IJLjava/lang/String;Ljava/util/Map;Lokio/ByteString;)V
	public synthetic fun <init> (Ljava/lang/String;Lokio/ByteString;Ljava/lang/String;IJLjava/lang/String;Ljava/util/Map;Lokio/ByteString;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun copy (Ljava/lang/String;Lokio/ByteString;Ljava/lang/String;IJLjava/lang/String;Ljava/util/Map;Lokio/ByteString;)Lcom/trendyol/stove/testing/e2e/standalone/kafka/ConsumedMessage;
	public static synthetic fun copy$default (Lcom/trendyol/stove/testing/e2e/standalone/kafka/ConsumedMessage;Ljava/lang/String;Lokio/ByteString;Ljava/lang/String;IJLjava/lang/String;Ljava/util/Map;Lokio/ByteString;ILjava/lang/Object;)Lcom/trendyol/stove/testing/e2e/standalone/kafka/ConsumedMessage;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getHeaders ()Ljava/util/Map;
	public final fun getId ()Ljava/lang/String;
	public final fun getKey ()Ljava/lang/String;
	public final fun getMessage ()Lokio/ByteString;
	public final fun getOffset ()J
	public final fun getPartition ()I
	public final fun getTopic ()Ljava/lang/String;
	public fun hashCode ()I
	public synthetic fun newBuilder ()Lcom/squareup/wire/Message$Builder;
	public synthetic fun newBuilder ()Ljava/lang/Void;
	public fun toString ()Ljava/lang/String;
}

public final class com/trendyol/stove/testing/e2e/standalone/kafka/ConsumedMessage$Companion {
}

public final class com/trendyol/stove/testing/e2e/standalone/kafka/ConsumedRecord {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;[BLjava/util/Map;JI)V
	public final fun getHeaders ()Ljava/util/Map;
	public final fun getKey ()Ljava/lang/String;
	public final fun getOffset ()J
	public final fun getPartition ()I
	public final fun getTopic ()Ljava/lang/String;
	public final fun getValue ()[B
}

public final class com/trendyol/stove/testing/e2e/standalone/kafka/CoroutinesKt {
	public static final fun getAsExecutor (Lkotlinx/coroutines/CoroutineScope;)Ljava/util/concurrent/Executor;
	public static final fun getAsExecutorService (Lkotlinx/coroutines/CoroutineScope;)Ljava/util/concurrent/ExecutorService;
}

public final class com/trendyol/stove/testing/e2e/standalone/kafka/ExtensionsKt {
	public static final fun metadata (Lcom/trendyol/stove/testing/e2e/standalone/kafka/ConsumedMessage;)Lcom/trendyol/stove/testing/e2e/messaging/MessageMetadata;
	public static final fun metadata (Lcom/trendyol/stove/testing/e2e/standalone/kafka/PublishedMessage;)Lcom/trendyol/stove/testing/e2e/messaging/MessageMetadata;
	public static final fun toProperties (Ljava/util/Map;)Ljava/util/Properties;
}

public final class com/trendyol/stove/testing/e2e/standalone/kafka/GrpcStoveKafkaObserverServiceClient : com/trendyol/stove/testing/e2e/standalone/kafka/StoveKafkaObserverServiceClient {
	public fun <init> (Lcom/squareup/wire/GrpcClient;)V
	public fun healthCheck ()Lcom/squareup/wire/GrpcCall;
	public fun onAcknowledgedMessage ()Lcom/squareup/wire/GrpcCall;
	public fun onCommittedMessage ()Lcom/squareup/wire/GrpcCall;
	public fun onConsumedMessage ()Lcom/squareup/wire/GrpcCall;
	public fun onPublishedMessage ()Lcom/squareup/wire/GrpcCall;
}

public final class com/trendyol/stove/testing/e2e/standalone/kafka/HealthCheckRequest : com/squareup/wire/Message {
	public static final field ADAPTER Lcom/squareup/wire/ProtoAdapter;
	public static final field Companion Lcom/trendyol/stove/testing/e2e/standalone/kafka/HealthCheckRequest$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Lokio/ByteString;)V
	public synthetic fun <init> (Ljava/lang/String;Lokio/ByteString;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun copy (Ljava/lang/String;Lokio/ByteString;)Lcom/trendyol/stove/testing/e2e/standalone/kafka/HealthCheckRequest;
	public static synthetic fun copy$default (Lcom/trendyol/stove/testing/e2e/standalone/kafka/HealthCheckRequest;Ljava/lang/String;Lokio/ByteString;ILjava/lang/Object;)Lcom/trendyol/stove/testing/e2e/standalone/kafka/HealthCheckRequest;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getService ()Ljava/lang/String;
	public fun hashCode ()I
	public synthetic fun newBuilder ()Lcom/squareup/wire/Message$Builder;
	public synthetic fun newBuilder ()Ljava/lang/Void;
	public fun toString ()Ljava/lang/String;
}

public final class com/trendyol/stove/testing/e2e/standalone/kafka/HealthCheckRequest$Companion {
}

public final class com/trendyol/stove/testing/e2e/standalone/kafka/HealthCheckResponse : com/squareup/wire/Message {
	public static final field ADAPTER Lcom/squareup/wire/ProtoAdapter;
	public static final field Companion Lcom/trendyol/stove/testing/e2e/standalone/kafka/HealthCheckResponse$Companion;
	public fun <init> ()V
	public fun <init> (Lcom/trendyol/stove/testing/e2e/standalone/kafka/HealthCheckResponse$ServingStatus;Lokio/ByteString;)V
	public synthetic fun <init> (Lcom/trendyol/stove/testing/e2e/standalone/kafka/HealthCheckResponse$ServingStatus;Lokio/ByteString;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun copy (Lcom/trendyol/stove/testing/e2e/standalone/kafka/HealthCheckResponse$ServingStatus;Lokio/ByteString;)Lcom/trendyol/stove/testing/e2e/standalone/kafka/HealthCheckResponse;
	public static synthetic fun copy$default (Lcom/trendyol/stove/testing/e2e/standalone/kafka/HealthCheckResponse;Lcom/trendyol/stove/testing/e2e/standalone/kafka/HealthCheckResponse$ServingStatus;Lokio/ByteString;ILjava/lang/Object;)Lcom/trendyol/stove/testing/e2e/standalone/kafka/HealthCheckResponse;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getStatus ()Lcom/trendyol/stove/testing/e2e/standalone/kafka/HealthCheckResponse$ServingStatus;
	public fun hashCode ()I
	public synthetic fun newBuilder ()Lcom/squareup/wire/Message$Builder;
	public synthetic fun newBuilder ()Ljava/lang/Void;
	public fun toString ()Ljava/lang/String;
}

public final class com/trendyol/stove/testing/e2e/standalone/kafka/HealthCheckResponse$Companion {
}

public final class com/trendyol/stove/testing/e2e/standalone/kafka/HealthCheckResponse$ServingStatus : java/lang/Enum, com/squareup/wire/WireEnum {
	public static final field ADAPTER Lcom/squareup/wire/ProtoAdapter;
	public static final field Companion Lcom/trendyol/stove/testing/e2e/standalone/kafka/HealthCheckResponse$ServingStatus$Companion;
	public static final field NOT_SERVING Lcom/trendyol/stove/testing/e2e/standalone/kafka/HealthCheckResponse$ServingStatus;
	public static final field SERVICE_UNKNOWN Lcom/trendyol/stove/testing/e2e/standalone/kafka/HealthCheckResponse$ServingStatus;
	public static final field SERVING Lcom/trendyol/stove/testing/e2e/standalone/kafka/HealthCheckResponse$ServingStatus;
	public static final field UNKNOWN Lcom/trendyol/stove/testing/e2e/standalone/kafka/HealthCheckResponse$ServingStatus;
	public static final fun fromValue (I)Lcom/trendyol/stove/testing/e2e/standalone/kafka/HealthCheckResponse$ServingStatus;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public fun getValue ()I
	public static fun valueOf (Ljava/lang/String;)Lcom/trendyol/stove/testing/e2e/standalone/kafka/HealthCheckResponse$ServingStatus;
	public static fun values ()[Lcom/trendyol/stove/testing/e2e/standalone/kafka/HealthCheckResponse$ServingStatus;
}

public final class com/trendyol/stove/testing/e2e/standalone/kafka/HealthCheckResponse$ServingStatus$Companion {
	public final fun fromValue (I)Lcom/trendyol/stove/testing/e2e/standalone/kafka/HealthCheckResponse$ServingStatus;
}

public final class com/trendyol/stove/testing/e2e/standalone/kafka/KafkaContainerOptions : com/trendyol/stove/testing/e2e/containers/ContainerOptions {
	public static final field Companion Lcom/trendyol/stove/testing/e2e/standalone/kafka/KafkaContainerOptions$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/util/List;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Lkotlin/jvm/functions/Function1;
	public final fun component7 ()Lkotlin/jvm/functions/Function1;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lcom/trendyol/stove/testing/e2e/standalone/kafka/KafkaContainerOptions;
	public static synthetic fun copy$default (Lcom/trendyol/stove/testing/e2e/standalone/kafka/KafkaContainerOptions;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lcom/trendyol/stove/testing/e2e/standalone/kafka/KafkaContainerOptions;
	public fun equals (Ljava/lang/Object;)Z
	public fun getCompatibleSubstitute ()Ljava/lang/String;
	public fun getContainerFn ()Lkotlin/jvm/functions/Function1;
	public fun getImage ()Ljava/lang/String;
	public fun getImageWithTag ()Ljava/lang/String;
	public final fun getPorts ()Ljava/util/List;
	public fun getRegistry ()Ljava/lang/String;
	public fun getTag ()Ljava/lang/String;
	public fun getUseContainerFn ()Lkotlin/jvm/functions/Function1;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/trendyol/stove/testing/e2e/standalone/kafka/KafkaContainerOptions$Companion {
	public final fun getDEFAULT_KAFKA_PORTS ()Ljava/util/List;
}

public final class com/trendyol/stove/testing/e2e/standalone/kafka/KafkaContext {
	public fun <init> (Lcom/trendyol/stove/testing/e2e/standalone/kafka/StoveKafkaContainer;Lcom/trendyol/stove/testing/e2e/standalone/kafka/KafkaSystemOptions;)V
	public final fun component1 ()Lcom/trendyol/stove/testing/e2e/standalone/kafka/StoveKafkaContainer;
	public final fun component2 ()Lcom/trendyol/stove/testing/e2e/standalone/kafka/KafkaSystemOptions;
	public final fun copy (Lcom/trendyol/stove/testing/e2e/standalone/kafka/StoveKafkaContainer;Lcom/trendyol/stove/testing/e2e/standalone/kafka/KafkaSystemOptions;)Lcom/trendyol/stove/testing/e2e/standalone/kafka/KafkaContext;
	public static synthetic fun copy$default (Lcom/trendyol/stove/testing/e2e/standalone/kafka/KafkaContext;Lcom/trendyol/stove/testing/e2e/standalone/kafka/StoveKafkaContainer;Lcom/trendyol/stove/testing/e2e/standalone/kafka/KafkaSystemOptions;ILjava/lang/Object;)Lcom/trendyol/stove/testing/e2e/standalone/kafka/KafkaContext;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getContainer ()Lcom/trendyol/stove/testing/e2e/standalone/kafka/StoveKafkaContainer;
	public final fun getOptions ()Lcom/trendyol/stove/testing/e2e/standalone/kafka/KafkaSystemOptions;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/trendyol/stove/testing/e2e/standalone/kafka/KafkaContextKt {
	public static final fun kafka-E6EcY7A (Lcom/trendyol/stove/testing/e2e/system/TestSystem;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun kafka-PmNtuJU (Lcom/trendyol/stove/testing/e2e/system/TestSystem;Lkotlin/jvm/functions/Function0;)Lcom/trendyol/stove/testing/e2e/system/TestSystem;
}

public final class com/trendyol/stove/testing/e2e/standalone/kafka/KafkaExposedConfiguration : com/trendyol/stove/testing/e2e/system/abstractions/ExposedConfiguration {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Lcom/trendyol/stove/testing/e2e/standalone/kafka/KafkaExposedConfiguration;
	public static synthetic fun copy$default (Lcom/trendyol/stove/testing/e2e/standalone/kafka/KafkaExposedConfiguration;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lcom/trendyol/stove/testing/e2e/standalone/kafka/KafkaExposedConfiguration;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBootstrapServers ()Ljava/lang/String;
	public final fun getInterceptorClass ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/trendyol/stove/testing/e2e/standalone/kafka/KafkaSystem : com/trendyol/stove/testing/e2e/system/abstractions/AfterRunAware, com/trendyol/stove/testing/e2e/system/abstractions/BeforeRunAware, com/trendyol/stove/testing/e2e/system/abstractions/ExposesConfiguration, com/trendyol/stove/testing/e2e/system/abstractions/PluggedSystem, com/trendyol/stove/testing/e2e/system/abstractions/RunAware {
	public static final field Companion Lcom/trendyol/stove/testing/e2e/standalone/kafka/KafkaSystem$Companion;
	public field sink Lcom/trendyol/stove/testing/e2e/standalone/kafka/intercepting/TestSystemMessageSink;
	public fun <init> (Lcom/trendyol/stove/testing/e2e/system/TestSystem;Lcom/trendyol/stove/testing/e2e/standalone/kafka/KafkaContext;)V
	public final fun adminOperations (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun afterRun (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun beforeRun (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun close ()V
	public fun configuration ()Ljava/util/List;
	public final fun consumer-IY8X1Ik (Ljava/lang/String;ZLjava/lang/String;ZLkotlin/jvm/functions/Function1;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;JJLjava/lang/String;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun consumer-IY8X1Ik$default (Lcom/trendyol/stove/testing/e2e/standalone/kafka/KafkaSystem;Ljava/lang/String;ZLjava/lang/String;ZLkotlin/jvm/functions/Function1;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;JJLjava/lang/String;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public fun executeWithReuseCheck (Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getSink ()Lcom/trendyol/stove/testing/e2e/standalone/kafka/intercepting/TestSystemMessageSink;
	public fun getTestSystem ()Lcom/trendyol/stove/testing/e2e/system/TestSystem;
	public final fun messageStore ()Lcom/trendyol/stove/testing/e2e/standalone/kafka/intercepting/MessageStore;
	public final fun pause ()Lcom/trendyol/stove/testing/e2e/standalone/kafka/KafkaSystem;
	public final fun peekCommittedMessages-rnQQ1Ag (JLjava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun peekCommittedMessages-rnQQ1Ag$default (Lcom/trendyol/stove/testing/e2e/standalone/kafka/KafkaSystem;JLjava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun peekConsumedMessages-rnQQ1Ag (JLjava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun peekConsumedMessages-rnQQ1Ag$default (Lcom/trendyol/stove/testing/e2e/standalone/kafka/KafkaSystem;JLjava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun peekPublishedMessages-rnQQ1Ag (JLjava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun peekPublishedMessages-rnQQ1Ag$default (Lcom/trendyol/stove/testing/e2e/standalone/kafka/KafkaSystem;JLjava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun publish (Ljava/lang/String;Ljava/lang/Object;Larrow/core/Option;Ljava/util/Map;ILarrow/core/Option;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun publish$default (Lcom/trendyol/stove/testing/e2e/standalone/kafka/KafkaSystem;Ljava/lang/String;Ljava/lang/Object;Larrow/core/Option;Ljava/util/Map;ILarrow/core/Option;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public fun run (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun setSink (Lcom/trendyol/stove/testing/e2e/standalone/kafka/intercepting/TestSystemMessageSink;)V
	public final fun shouldBeConsumedInternal-dWUq8MI (Lkotlin/reflect/KClass;JLkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun shouldBeFailedInternal-dWUq8MI (Lkotlin/reflect/KClass;JLkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun shouldBePublishedInternal-dWUq8MI (Lkotlin/reflect/KClass;JLkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun shouldBeRetriedInternal-WPwdCS8 (Lkotlin/reflect/KClass;JILkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun stop (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun then ()Lcom/trendyol/stove/testing/e2e/system/TestSystem;
	public final fun unpause ()Lcom/trendyol/stove/testing/e2e/standalone/kafka/KafkaSystem;
}

public final class com/trendyol/stove/testing/e2e/standalone/kafka/KafkaSystem$Companion {
}

public final class com/trendyol/stove/testing/e2e/standalone/kafka/KafkaSystemKt {
	public static final field STOVE_KAFKA_BRIDGE_PORT Ljava/lang/String;
	public static final fun getStoveKafkaBridgePortDefault ()Ljava/lang/String;
	public static final fun getStoveSerdeRef ()Lcom/trendyol/stove/testing/e2e/serialization/StoveSerde;
	public static final fun setStoveKafkaBridgePortDefault (Ljava/lang/String;)V
	public static final fun setStoveSerdeRef (Lcom/trendyol/stove/testing/e2e/serialization/StoveSerde;)V
}

public final class com/trendyol/stove/testing/e2e/standalone/kafka/KafkaSystemOptions : com/trendyol/stove/testing/e2e/system/abstractions/ConfiguresExposedConfiguration, com/trendyol/stove/testing/e2e/system/abstractions/SystemOptions {
	public fun <init> (Lcom/trendyol/stove/testing/e2e/standalone/kafka/TopicSuffixes;ZILcom/trendyol/stove/testing/e2e/serialization/StoveSerde;Lorg/apache/kafka/common/serialization/Serializer;Lcom/trendyol/stove/testing/e2e/standalone/kafka/KafkaContainerOptions;Lkotlin/jvm/functions/Function1;)V
	public synthetic fun <init> (Lcom/trendyol/stove/testing/e2e/standalone/kafka/TopicSuffixes;ZILcom/trendyol/stove/testing/e2e/serialization/StoveSerde;Lorg/apache/kafka/common/serialization/Serializer;Lcom/trendyol/stove/testing/e2e/standalone/kafka/KafkaContainerOptions;Lkotlin/jvm/functions/Function1;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getBridgeGrpcServerPort ()I
	public fun getConfigureExposedConfiguration ()Lkotlin/jvm/functions/Function1;
	public final fun getContainerOptions ()Lcom/trendyol/stove/testing/e2e/standalone/kafka/KafkaContainerOptions;
	public final fun getListenPublishedMessagesFromStove ()Z
	public final fun getSerde ()Lcom/trendyol/stove/testing/e2e/serialization/StoveSerde;
	public final fun getTopicSuffixes ()Lcom/trendyol/stove/testing/e2e/standalone/kafka/TopicSuffixes;
	public final fun getValueSerializer ()Lorg/apache/kafka/common/serialization/Serializer;
}

public final class com/trendyol/stove/testing/e2e/standalone/kafka/PublishedMessage : com/squareup/wire/Message {
	public static final field ADAPTER Lcom/squareup/wire/ProtoAdapter;
	public static final field Companion Lcom/trendyol/stove/testing/e2e/standalone/kafka/PublishedMessage$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Lokio/ByteString;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lokio/ByteString;)V
	public synthetic fun <init> (Ljava/lang/String;Lokio/ByteString;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lokio/ByteString;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun copy (Ljava/lang/String;Lokio/ByteString;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lokio/ByteString;)Lcom/trendyol/stove/testing/e2e/standalone/kafka/PublishedMessage;
	public static synthetic fun copy$default (Lcom/trendyol/stove/testing/e2e/standalone/kafka/PublishedMessage;Ljava/lang/String;Lokio/ByteString;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lokio/ByteString;ILjava/lang/Object;)Lcom/trendyol/stove/testing/e2e/standalone/kafka/PublishedMessage;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getHeaders ()Ljava/util/Map;
	public final fun getId ()Ljava/lang/String;
	public final fun getKey ()Ljava/lang/String;
	public final fun getMessage ()Lokio/ByteString;
	public final fun getTopic ()Ljava/lang/String;
	public fun hashCode ()I
	public synthetic fun newBuilder ()Lcom/squareup/wire/Message$Builder;
	public synthetic fun newBuilder ()Ljava/lang/Void;
	public fun toString ()Ljava/lang/String;
}

public final class com/trendyol/stove/testing/e2e/standalone/kafka/PublishedMessage$Companion {
}

public final class com/trendyol/stove/testing/e2e/standalone/kafka/PublishedRecord {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;[BLjava/util/Map;)V
	public final fun getHeaders ()Ljava/util/Map;
	public final fun getKey ()Ljava/lang/String;
	public final fun getTopic ()Ljava/lang/String;
	public final fun getValue ()[B
}

public final class com/trendyol/stove/testing/e2e/standalone/kafka/Reply : com/squareup/wire/Message {
	public static final field ADAPTER Lcom/squareup/wire/ProtoAdapter;
	public static final field Companion Lcom/trendyol/stove/testing/e2e/standalone/kafka/Reply$Companion;
	public fun <init> ()V
	public fun <init> (ILokio/ByteString;)V
	public synthetic fun <init> (ILokio/ByteString;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun copy (ILokio/ByteString;)Lcom/trendyol/stove/testing/e2e/standalone/kafka/Reply;
	public static synthetic fun copy$default (Lcom/trendyol/stove/testing/e2e/standalone/kafka/Reply;ILokio/ByteString;ILjava/lang/Object;)Lcom/trendyol/stove/testing/e2e/standalone/kafka/Reply;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getStatus ()I
	public fun hashCode ()I
	public synthetic fun newBuilder ()Lcom/squareup/wire/Message$Builder;
	public synthetic fun newBuilder ()Ljava/lang/Void;
	public fun toString ()Ljava/lang/String;
}

public final class com/trendyol/stove/testing/e2e/standalone/kafka/Reply$Companion {
}

public class com/trendyol/stove/testing/e2e/standalone/kafka/StoveKafkaContainer : org/testcontainers/kafka/ConfluentKafkaContainer, com/trendyol/stove/testing/e2e/containers/StoveContainer {
	public fun <init> (Lorg/testcontainers/utility/DockerImageName;)V
	public fun getContainerIdAccess ()Ljava/lang/String;
	public fun getDockerClientAccess ()Lkotlin/Lazy;
	public fun getImageNameAccess ()Lorg/testcontainers/utility/DockerImageName;
	public fun inspect ()Lcom/trendyol/stove/testing/e2e/containers/StoveContainerInspectInformation;
	public fun pause ()V
	public fun unpause ()V
}

public abstract interface class com/trendyol/stove/testing/e2e/standalone/kafka/StoveKafkaObserverServiceClient : com/squareup/wire/Service {
	public abstract fun healthCheck ()Lcom/squareup/wire/GrpcCall;
	public abstract fun onAcknowledgedMessage ()Lcom/squareup/wire/GrpcCall;
	public abstract fun onCommittedMessage ()Lcom/squareup/wire/GrpcCall;
	public abstract fun onConsumedMessage ()Lcom/squareup/wire/GrpcCall;
	public abstract fun onPublishedMessage ()Lcom/squareup/wire/GrpcCall;
}

public abstract interface class com/trendyol/stove/testing/e2e/standalone/kafka/StoveKafkaObserverServiceServer : com/squareup/wire/Service {
	public abstract fun healthCheck (Lcom/trendyol/stove/testing/e2e/standalone/kafka/HealthCheckRequest;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun onAcknowledgedMessage (Lcom/trendyol/stove/testing/e2e/standalone/kafka/AcknowledgedMessage;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun onCommittedMessage (Lcom/trendyol/stove/testing/e2e/standalone/kafka/CommittedMessage;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun onConsumedMessage (Lcom/trendyol/stove/testing/e2e/standalone/kafka/ConsumedMessage;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun onPublishedMessage (Lcom/trendyol/stove/testing/e2e/standalone/kafka/PublishedMessage;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class com/trendyol/stove/testing/e2e/standalone/kafka/StoveKafkaObserverServiceWireGrpc {
	public static final field INSTANCE Lcom/trendyol/stove/testing/e2e/standalone/kafka/StoveKafkaObserverServiceWireGrpc;
	public static final field SERVICE_NAME Ljava/lang/String;
	public final fun getServiceDescriptor ()Lio/grpc/ServiceDescriptor;
	public final fun gethealthCheckMethod ()Lio/grpc/MethodDescriptor;
	public final fun getonAcknowledgedMessageMethod ()Lio/grpc/MethodDescriptor;
	public final fun getonCommittedMessageMethod ()Lio/grpc/MethodDescriptor;
	public final fun getonConsumedMessageMethod ()Lio/grpc/MethodDescriptor;
	public final fun getonPublishedMessageMethod ()Lio/grpc/MethodDescriptor;
	public final fun newStub (Lio/grpc/Channel;)Lcom/trendyol/stove/testing/e2e/standalone/kafka/StoveKafkaObserverServiceWireGrpc$StoveKafkaObserverServiceStub;
}

public final class com/trendyol/stove/testing/e2e/standalone/kafka/StoveKafkaObserverServiceWireGrpc$BindableAdapter : com/trendyol/stove/testing/e2e/standalone/kafka/StoveKafkaObserverServiceWireGrpc$StoveKafkaObserverServiceImplBase {
	public fun <init> (Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function0;)V
	public synthetic fun <init> (Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function0;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun <init> (Lkotlin/jvm/functions/Function0;)V
	public fun healthCheck (Lcom/trendyol/stove/testing/e2e/standalone/kafka/HealthCheckRequest;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun onAcknowledgedMessage (Lcom/trendyol/stove/testing/e2e/standalone/kafka/AcknowledgedMessage;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun onCommittedMessage (Lcom/trendyol/stove/testing/e2e/standalone/kafka/CommittedMessage;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun onConsumedMessage (Lcom/trendyol/stove/testing/e2e/standalone/kafka/ConsumedMessage;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun onPublishedMessage (Lcom/trendyol/stove/testing/e2e/standalone/kafka/PublishedMessage;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract class com/trendyol/stove/testing/e2e/standalone/kafka/StoveKafkaObserverServiceWireGrpc$StoveKafkaObserverServiceImplBase : com/squareup/wire/kotlin/grpcserver/WireBindableService {
	public fun <init> ()V
	public fun <init> (Lkotlin/coroutines/CoroutineContext;)V
	public synthetic fun <init> (Lkotlin/coroutines/CoroutineContext;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun bindService ()Lio/grpc/ServerServiceDefinition;
	protected final fun getContext ()Lkotlin/coroutines/CoroutineContext;
	public fun healthCheck (Lcom/trendyol/stove/testing/e2e/standalone/kafka/HealthCheckRequest;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun onAcknowledgedMessage (Lcom/trendyol/stove/testing/e2e/standalone/kafka/AcknowledgedMessage;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun onCommittedMessage (Lcom/trendyol/stove/testing/e2e/standalone/kafka/CommittedMessage;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun onConsumedMessage (Lcom/trendyol/stove/testing/e2e/standalone/kafka/ConsumedMessage;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun onPublishedMessage (Lcom/trendyol/stove/testing/e2e/standalone/kafka/PublishedMessage;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class com/trendyol/stove/testing/e2e/standalone/kafka/StoveKafkaObserverServiceWireGrpc$StoveKafkaObserverServiceImplBase$AcknowledgedMessageMarshaller : com/squareup/wire/kotlin/grpcserver/WireMethodMarshaller {
	public fun <init> ()V
	public fun marshalledClass ()Ljava/lang/Class;
	public fun parse (Ljava/io/InputStream;)Lcom/trendyol/stove/testing/e2e/standalone/kafka/AcknowledgedMessage;
	public synthetic fun parse (Ljava/io/InputStream;)Ljava/lang/Object;
	public fun stream (Lcom/trendyol/stove/testing/e2e/standalone/kafka/AcknowledgedMessage;)Ljava/io/InputStream;
	public synthetic fun stream (Ljava/lang/Object;)Ljava/io/InputStream;
}

public final class com/trendyol/stove/testing/e2e/standalone/kafka/StoveKafkaObserverServiceWireGrpc$StoveKafkaObserverServiceImplBase$CommittedMessageMarshaller : com/squareup/wire/kotlin/grpcserver/WireMethodMarshaller {
	public fun <init> ()V
	public fun marshalledClass ()Ljava/lang/Class;
	public fun parse (Ljava/io/InputStream;)Lcom/trendyol/stove/testing/e2e/standalone/kafka/CommittedMessage;
	public synthetic fun parse (Ljava/io/InputStream;)Ljava/lang/Object;
	public fun stream (Lcom/trendyol/stove/testing/e2e/standalone/kafka/CommittedMessage;)Ljava/io/InputStream;
	public synthetic fun stream (Ljava/lang/Object;)Ljava/io/InputStream;
}

public final class com/trendyol/stove/testing/e2e/standalone/kafka/StoveKafkaObserverServiceWireGrpc$StoveKafkaObserverServiceImplBase$ConsumedMessageMarshaller : com/squareup/wire/kotlin/grpcserver/WireMethodMarshaller {
	public fun <init> ()V
	public fun marshalledClass ()Ljava/lang/Class;
	public fun parse (Ljava/io/InputStream;)Lcom/trendyol/stove/testing/e2e/standalone/kafka/ConsumedMessage;
	public synthetic fun parse (Ljava/io/InputStream;)Ljava/lang/Object;
	public fun stream (Lcom/trendyol/stove/testing/e2e/standalone/kafka/ConsumedMessage;)Ljava/io/InputStream;
	public synthetic fun stream (Ljava/lang/Object;)Ljava/io/InputStream;
}

public final class com/trendyol/stove/testing/e2e/standalone/kafka/StoveKafkaObserverServiceWireGrpc$StoveKafkaObserverServiceImplBase$HealthCheckRequestMarshaller : com/squareup/wire/kotlin/grpcserver/WireMethodMarshaller {
	public fun <init> ()V
	public fun marshalledClass ()Ljava/lang/Class;
	public fun parse (Ljava/io/InputStream;)Lcom/trendyol/stove/testing/e2e/standalone/kafka/HealthCheckRequest;
	public synthetic fun parse (Ljava/io/InputStream;)Ljava/lang/Object;
	public fun stream (Lcom/trendyol/stove/testing/e2e/standalone/kafka/HealthCheckRequest;)Ljava/io/InputStream;
	public synthetic fun stream (Ljava/lang/Object;)Ljava/io/InputStream;
}

public final class com/trendyol/stove/testing/e2e/standalone/kafka/StoveKafkaObserverServiceWireGrpc$StoveKafkaObserverServiceImplBase$HealthCheckResponseMarshaller : com/squareup/wire/kotlin/grpcserver/WireMethodMarshaller {
	public fun <init> ()V
	public fun marshalledClass ()Ljava/lang/Class;
	public fun parse (Ljava/io/InputStream;)Lcom/trendyol/stove/testing/e2e/standalone/kafka/HealthCheckResponse;
	public synthetic fun parse (Ljava/io/InputStream;)Ljava/lang/Object;
	public fun stream (Lcom/trendyol/stove/testing/e2e/standalone/kafka/HealthCheckResponse;)Ljava/io/InputStream;
	public synthetic fun stream (Ljava/lang/Object;)Ljava/io/InputStream;
}

public final class com/trendyol/stove/testing/e2e/standalone/kafka/StoveKafkaObserverServiceWireGrpc$StoveKafkaObserverServiceImplBase$PublishedMessageMarshaller : com/squareup/wire/kotlin/grpcserver/WireMethodMarshaller {
	public fun <init> ()V
	public fun marshalledClass ()Ljava/lang/Class;
	public fun parse (Ljava/io/InputStream;)Lcom/trendyol/stove/testing/e2e/standalone/kafka/PublishedMessage;
	public synthetic fun parse (Ljava/io/InputStream;)Ljava/lang/Object;
	public fun stream (Lcom/trendyol/stove/testing/e2e/standalone/kafka/PublishedMessage;)Ljava/io/InputStream;
	public synthetic fun stream (Ljava/lang/Object;)Ljava/io/InputStream;
}

public final class com/trendyol/stove/testing/e2e/standalone/kafka/StoveKafkaObserverServiceWireGrpc$StoveKafkaObserverServiceImplBase$ReplyMarshaller : com/squareup/wire/kotlin/grpcserver/WireMethodMarshaller {
	public fun <init> ()V
	public fun marshalledClass ()Ljava/lang/Class;
	public fun parse (Ljava/io/InputStream;)Lcom/trendyol/stove/testing/e2e/standalone/kafka/Reply;
	public synthetic fun parse (Ljava/io/InputStream;)Ljava/lang/Object;
	public fun stream (Lcom/trendyol/stove/testing/e2e/standalone/kafka/Reply;)Ljava/io/InputStream;
	public synthetic fun stream (Ljava/lang/Object;)Ljava/io/InputStream;
}

public final class com/trendyol/stove/testing/e2e/standalone/kafka/StoveKafkaObserverServiceWireGrpc$StoveKafkaObserverServiceStub : io/grpc/kotlin/AbstractCoroutineStub {
	public synthetic fun build (Lio/grpc/Channel;Lio/grpc/CallOptions;)Lio/grpc/stub/AbstractStub;
	public final fun healthCheck (Lcom/trendyol/stove/testing/e2e/standalone/kafka/HealthCheckRequest;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun onAcknowledgedMessage (Lcom/trendyol/stove/testing/e2e/standalone/kafka/AcknowledgedMessage;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun onCommittedMessage (Lcom/trendyol/stove/testing/e2e/standalone/kafka/CommittedMessage;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun onConsumedMessage (Lcom/trendyol/stove/testing/e2e/standalone/kafka/ConsumedMessage;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun onPublishedMessage (Lcom/trendyol/stove/testing/e2e/standalone/kafka/PublishedMessage;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class com/trendyol/stove/testing/e2e/standalone/kafka/StoveKafkaValueDeserializer : org/apache/kafka/common/serialization/Deserializer {
	public fun <init> ()V
	public fun deserialize (Ljava/lang/String;[B)Ljava/lang/Object;
}

public final class com/trendyol/stove/testing/e2e/standalone/kafka/StoveKafkaValueSerializer : org/apache/kafka/common/serialization/Serializer {
	public fun <init> ()V
	public fun serialize (Ljava/lang/String;Ljava/lang/Object;)[B
}

public final class com/trendyol/stove/testing/e2e/standalone/kafka/TopicSuffixes {
	public fun <init> ()V
	public fun <init> (Ljava/util/List;Ljava/util/List;)V
	public synthetic fun <init> (Ljava/util/List;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/util/List;
	public final fun component2 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;Ljava/util/List;)Lcom/trendyol/stove/testing/e2e/standalone/kafka/TopicSuffixes;
	public static synthetic fun copy$default (Lcom/trendyol/stove/testing/e2e/standalone/kafka/TopicSuffixes;Ljava/util/List;Ljava/util/List;ILjava/lang/Object;)Lcom/trendyol/stove/testing/e2e/standalone/kafka/TopicSuffixes;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getError ()Ljava/util/List;
	public final fun getRetry ()Ljava/util/List;
	public fun hashCode ()I
	public final fun isErrorTopic (Ljava/lang/String;)Z
	public final fun isRetryTopic (Ljava/lang/String;)Z
	public fun toString ()Ljava/lang/String;
}

public final class com/trendyol/stove/testing/e2e/standalone/kafka/intercepting/GrpcUtils {
	public static final field INSTANCE Lcom/trendyol/stove/testing/e2e/standalone/kafka/intercepting/GrpcUtils;
	public final fun createClient (Ljava/lang/String;Lkotlinx/coroutines/CoroutineScope;)Lcom/trendyol/stove/testing/e2e/standalone/kafka/StoveKafkaObserverServiceClient;
}

public final class com/trendyol/stove/testing/e2e/standalone/kafka/intercepting/MessageStore {
	public fun <init> ()V
	public final fun committedMessages ()Ljava/util/Collection;
	public final fun consumedMessages ()Ljava/util/Collection;
	public final fun failedMessages ()Ljava/util/Collection;
	public final fun publishedMessages ()Ljava/util/Collection;
	public final fun retriedMessages ()Ljava/util/Collection;
	public fun toString ()Ljava/lang/String;
}

public final class com/trendyol/stove/testing/e2e/standalone/kafka/intercepting/StoveKafkaBridge : org/apache/kafka/clients/consumer/ConsumerInterceptor, org/apache/kafka/clients/producer/ProducerInterceptor {
	public fun <init> ()V
	public fun close ()V
	public fun configure (Ljava/util/Map;)V
	public fun onAcknowledgement (Lorg/apache/kafka/clients/producer/RecordMetadata;Ljava/lang/Exception;)V
	public fun onCommit (Ljava/util/Map;)V
	public fun onConsume (Lorg/apache/kafka/clients/consumer/ConsumerRecords;)Lorg/apache/kafka/clients/consumer/ConsumerRecords;
	public fun onSend (Lorg/apache/kafka/clients/producer/ProducerRecord;)Lorg/apache/kafka/clients/producer/ProducerRecord;
}

public final class com/trendyol/stove/testing/e2e/standalone/kafka/intercepting/StoveKafkaObserverGrpcServer : com/trendyol/stove/testing/e2e/standalone/kafka/StoveKafkaObserverServiceWireGrpc$StoveKafkaObserverServiceImplBase {
	public fun <init> (Lcom/trendyol/stove/testing/e2e/standalone/kafka/intercepting/TestSystemMessageSink;)V
	public fun healthCheck (Lcom/trendyol/stove/testing/e2e/standalone/kafka/HealthCheckRequest;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun onAcknowledgedMessage (Lcom/trendyol/stove/testing/e2e/standalone/kafka/AcknowledgedMessage;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun onCommittedMessage (Lcom/trendyol/stove/testing/e2e/standalone/kafka/CommittedMessage;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun onConsumedMessage (Lcom/trendyol/stove/testing/e2e/standalone/kafka/ConsumedMessage;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun onPublishedMessage (Lcom/trendyol/stove/testing/e2e/standalone/kafka/PublishedMessage;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class com/trendyol/stove/testing/e2e/standalone/kafka/intercepting/TestSystemMessageSink : com/trendyol/stove/testing/e2e/standalone/kafka/intercepting/CommonOps, com/trendyol/stove/testing/e2e/standalone/kafka/intercepting/MessageSinkOps {
	public fun <init> (Lorg/apache/kafka/clients/admin/Admin;Lcom/trendyol/stove/testing/e2e/serialization/StoveSerde;Lcom/trendyol/stove/testing/e2e/standalone/kafka/TopicSuffixes;)V
	public fun deserializeCatching-gIAlu-s ([BLkotlin/reflect/KClass;)Ljava/lang/Object;
	public fun dumpMessages ()Ljava/lang/String;
	public fun getAdminClient ()Lorg/apache/kafka/clients/admin/Admin;
	public fun getLogger ()Lorg/slf4j/Logger;
	public fun getSerde ()Lcom/trendyol/stove/testing/e2e/serialization/StoveSerde;
	public fun getStore ()Lcom/trendyol/stove/testing/e2e/standalone/kafka/intercepting/MessageStore;
	public fun getTopicSuffixes ()Lcom/trendyol/stove/testing/e2e/standalone/kafka/TopicSuffixes;
	public final fun onMessageAcknowledged (Lcom/trendyol/stove/testing/e2e/standalone/kafka/AcknowledgedMessage;)V
	public final fun onMessageCommitted (Lcom/trendyol/stove/testing/e2e/standalone/kafka/CommittedMessage;)V
	public final fun onMessageConsumed (Lcom/trendyol/stove/testing/e2e/standalone/kafka/ConsumedMessage;)V
	public final fun onMessagePublished (Lcom/trendyol/stove/testing/e2e/standalone/kafka/PublishedMessage;)V
	public fun recordAcknowledgedMessage (Lcom/trendyol/stove/testing/e2e/standalone/kafka/AcknowledgedMessage;)V
	public fun recordCommittedMessage (Lcom/trendyol/stove/testing/e2e/standalone/kafka/CommittedMessage;)V
	public fun recordConsumed (Lcom/trendyol/stove/testing/e2e/standalone/kafka/ConsumedMessage;)V
	public fun recordError (Lcom/trendyol/stove/testing/e2e/standalone/kafka/ConsumedMessage;)V
	public fun recordPublishedMessage (Lcom/trendyol/stove/testing/e2e/standalone/kafka/PublishedMessage;)V
	public fun recordRetry (Lcom/trendyol/stove/testing/e2e/standalone/kafka/ConsumedMessage;)V
	public fun throwIfFailed (Lkotlin/reflect/KClass;Lkotlin/jvm/functions/Function1;)V
	public fun throwIfRetried (Lkotlin/reflect/KClass;Lkotlin/jvm/functions/Function1;)V
	public fun waitUntilConditionMet-WPwdCS8 (Lkotlin/jvm/functions/Function0;JLjava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun waitUntilConsumed-rnQQ1Ag (JLkotlin/reflect/KClass;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun waitUntilCount-dWUq8MI (Lkotlin/jvm/functions/Function1;JILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun waitUntilFailed-rnQQ1Ag (JLkotlin/reflect/KClass;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun waitUntilPublished-rnQQ1Ag (JLkotlin/reflect/KClass;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun waitUntilRetried-gRj5Bb8 (JILkotlin/reflect/KClass;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

