[versions]
kotlin = "1.9.23"
kotlinx = "1.8.0"
spring-boot = "2.7.18"
spring-framework = "5.3.32"
spring-framework-6x = "6.1.4"
spring-boot-3x = "3.2.3"
spring-dependency-management = "1.1.4"
spring-kafka = "2.9.13"
spring-kafka-3x = "3.1.2"
couchbase-client = "3.6.0"
couchbase-client-metrics = "0.6.0"
couchbase-kotlin = "1.3.0"
jackson = "2.16.2"
arrow = "1.2.3"
io-reactor = "3.6.4"
io-reactor-extensions = "1.2.2"
slf4j = "2.0.12"
kafka = "3.7.0"
kafka-kotlin = "0.3.1"
dokka = "1.9.20"
knit = "0.5.0"
kover = "0.7.6"
ktor = "2.3.9"
koin = "3.5.3"
r2dbc-spi = "1.0.0.RELEASE"
r2dbc-postgresql = "0.8.13.RELEASE"
elastic = "8.12.2"
mongodb = "5.0.0"
wiremock = "3.4.2"
testcontainers = "1.19.7"
r2dbc-mssql = "1.0.2.RELEASE"

[libraries]
kotlin-stdlib-jdk8 = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlinx-reactor = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactor", version.ref = "kotlinx" }
kotlinx-reactive = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactive", version.ref = "kotlinx" }
kotlinx-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx" }
kotlinx-jdk8 = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8", version.ref = "kotlinx" }
kotlinx-slf4j = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-slf4j", version.ref = "kotlinx" }
kotlinx-knit = { module = "org.jetbrains.kotlinx:kotlinx-knit", version.ref = "knit" }
kotlinx-io-reactor = { module = "io.projectreactor:reactor-core", version.ref = "io-reactor" }
kotlinx-io-reactor-extensions = { module = "io.projectreactor.kotlin:reactor-kotlin-extensions", version.ref = "io-reactor-extensions" }
arrow-core = { module = "io.arrow-kt:arrow-core", version.ref = "arrow" }
kafka = { module = "org.apache.kafka:kafka-clients", version.ref = "kafka" }
kafkaKotlin = { module = "io.github.nomisrev:kotlin-kafka", version.ref = "kafka-kotlin" }
couchbase-kotlin = { module = "com.couchbase.client:kotlin-client", version.ref = "couchbase-kotlin" }
couchbase-client = { module = "com.couchbase.client:java-client", version.ref = "couchbase-client" }
couchbase-client-metrics = { module = "com.couchbase.client:metrics-micrometer", version.ref = "couchbase-client-metrics" }
jackson-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
jackson-arrow = { module = "io.arrow-kt:arrow-integrations-jackson-module", version = "0.14.1" }
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
slf4j-simple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j" }
ktor-server-host-common = { module = "io.ktor:ktor-server-host-common", version.ref = "ktor" }
ktor-server = { module = "io.ktor:ktor-server", version.ref = "ktor" }
ktor-server-call-logging = { module = "io.ktor:ktor-server-call-logging", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
koin-ktor = { module = "io.insert-koin:koin-ktor", version.ref = "koin" }
koin-logger-slf4j = { module = "io.insert-koin:koin-logger-slf4j", version.ref = "koin" }
r2dbc-spi = { module = "io.r2dbc:r2dbc-spi", version.ref = "r2dbc-spi" }
r2dbc-postgresql = { module = "io.r2dbc:r2dbc-postgresql", version.ref = "r2dbc-postgresql" }
elastic = { module = "co.elastic.clients:elasticsearch-java", version.ref = "elastic" }
mongodb-reactivestreams = { module = "org.mongodb:mongodb-driver-reactivestreams", version.ref = "mongodb" }

wiremock = { module = "org.wiremock:wiremock-standalone", version.ref = "wiremock" }
testcontainers = { module = "org.testcontainers:testcontainers", version.ref = "testcontainers" }
testcontainers-jdbc = { module = "org.testcontainers:jdbc", version.ref = "testcontainers" }
testcontainers-kafka = { module = "org.testcontainers:kafka", version.ref = "testcontainers" }
testcontainers-couchbase = { module = "org.testcontainers:couchbase", version.ref = "testcontainers" }
testcontainers-postgres = { module = "org.testcontainers:postgresql", version.ref = "testcontainers" }
testcontainers-elasticsearch = { module = "org.testcontainers:elasticsearch", version.ref = "testcontainers" }
testcontainers-mongodb = { module = "org.testcontainers:mongodb", version.ref = "testcontainers" }
testcontainers-mssql = { module = "org.testcontainers:mssqlserver", version.ref = "testcontainers" }
r2dbc-mssql = { module = "io.r2dbc:r2dbc-mssql", version.ref = "r2dbc-mssql" }
microsoft-sqlserver-jdbc = { module = "com.microsoft.sqlserver:mssql-jdbc", version = "12.6.1.jre11" }
testcontainers-redis = { module = "com.redis.testcontainers:testcontainers-redis-junit", version = "1.6.4" }
lettuce-core = { module = "io.lettuce:lettuce-core", version = "6.3.1.RELEASE" }
logback-classic = { module = "ch.qos.logback:logback-classic", version = "1.5.3" }

spring-boot = { module = "org.springframework.boot:spring-boot", version.ref = "spring-boot" }
spring-boot-webflux = { module = "org.springframework.boot:spring-boot-starter-webflux", version.ref = "spring-boot" }
spring-boot-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator", version.ref = "spring-boot" }
spring-boot-autoconfigure = { module = "org.springframework.boot:spring-boot-autoconfigure", version.ref = "spring-boot" }
spring-boot-annotationProcessor = { module = "org.springframework.boot:spring-boot-configuration-processor", version.ref = "spring-boot" }
spring-framework-context = { module = "org.springframework:spring-context", version.ref = "spring-framework" }
spring-framework-beans = { module = "org.springframework:spring-beans", version.ref = "spring-framework" }
spring-boot-kafka = { module = "org.springframework.kafka:spring-kafka", version.ref = "spring-kafka" }

spring-boot-3x = { module = "org.springframework.boot:spring-boot", version.ref = "spring-boot-3x" }
spring-boot-3x-webflux = { module = "org.springframework.boot:spring-boot-starter-webflux", version.ref = "spring-boot-3x" }
spring-boot-3x-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator", version.ref = "spring-boot-3x" }
spring-boot-3x-autoconfigure = { module = "org.springframework.boot:spring-boot-autoconfigure", version.ref = "spring-boot-3x" }
spring-boot-3x-annotationProcessor = { module = "org.springframework.boot:spring-boot-configuration-processor", version.ref = "spring-boot-3x" }
spring-boot-3x-kafka = { module = "org.springframework.kafka:spring-kafka", version.ref = "spring-kafka-3x" }
spring-framework-6x-context = { module = "org.springframework:spring-context", version.ref = "spring-framework-6x" }
spring-framework-6x-beans = { module = "org.springframework:spring-beans", version.ref = "spring-framework-6x" }

[plugins]
spring-plugin = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
spring-dependencyManagement = { id = "io.spring.dependency-management", version.ref = "spring-dependency-management" }
ktfmt = { id = "com.ncorti.ktfmt.gradle", version = "0.17.0" }
kotlinter = { id = "org.jmailen.kotlinter", version = "4.2.0" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
knit = { id = "org.jetbrains.kotlinx:kotlinx-knit", version.ref = "knit" }
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }
gitVersioning = { id = "com.palantir.git-version", version = "3.0.0" }

